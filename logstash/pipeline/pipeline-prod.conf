input {
  beats {
    port => 5044
  }
}

filter {
  if [log_type] == "error" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{GREEDYDATA:msg}" }
      tag_on_failure => ["_grokparsefailure"]
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    mutate {
      add_field => { "severity" => "error"  "service" => "myapp1" }
    }
  } else if [log_type] == "app" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{GREEDYDATA:msg}" }
      tag_on_failure => ["_grokparsefailure"]
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    mutate {
      add_field => { "severity" => "info" "service" => "myapp1" }
    }
  }
  mutate {
    remove_field => ["host", "agent", "input", "ecs", "log", "event"]
  }
}

output {
  if [log_type] == "error" {
    elasticsearch {
      hosts => ["http://nebulazone-elasticsearch:9200"]
      index => "beats-error-%{+YYYY.MM.dd}"
    }
  } else if [log_type] == "app" {
    elasticsearch {
      hosts => ["http://nebulazone-elasticsearch:9200"]
      index => "beats-app-%{+YYYY.MM.dd}"
    }
  }
  stdout { codec => rubydebug }
}
